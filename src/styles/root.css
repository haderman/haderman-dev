/**
 * source: https://utopia.fyi/blog/css-modular-scales
 */
:root {
  /**
   * The following ones are like the private custom properties and should not be used in the code
   */
  --fluid-min-width: 120;
  --fluid-max-width: 1500;
  --fluid-min-size: 10;
  --fluid-max-size: 14;
  --fluid-min-ratio: 1.2;
  --fluid-max-ratio: 1.33;

  --fluid-screen: 100vw;
  --fluid-bp: calc((var(--fluid-screen) - ((var(--fluid-min-width) / 16) * 1rem)) / ((var(--fluid-max-width) / 16) - (var(--fluid-min-width) / 16)));

  --fluid-min-scale-0: var(--fluid-min-ratio);
  --fluid-min-scale-1: var(--fluid-min-scale-0) * var(--fluid-min-ratio);
  --fluid-min-scale-2: var(--fluid-min-scale-1) * var(--fluid-min-ratio);
  --fluid-min-scale-3: var(--fluid-min-scale-2) * var(--fluid-min-ratio);
  --fluid-min-scale-4: var(--fluid-min-scale-3) * var(--fluid-min-ratio);
  --fluid-min-scale-5: var(--fluid-min-scale-4) * var(--fluid-min-ratio);
  --fluid-min-scale-6: var(--fluid-min-scale-5) * var(--fluid-min-ratio);
  --fluid-min-scale-7: var(--fluid-min-scale-6) * var(--fluid-min-ratio);
  --fluid-min-scale-8: var(--fluid-min-scale-7) * var(--fluid-min-ratio);

  --fluid-max-scale-0: var(--fluid-max-ratio);
  --fluid-max-scale-1: var(--fluid-max-scale-0) * var(--fluid-max-ratio);
  --fluid-max-scale-2: var(--fluid-max-scale-1) * var(--fluid-max-ratio);
  --fluid-max-scale-3: var(--fluid-max-scale-2) * var(--fluid-max-ratio);
  --fluid-max-scale-4: var(--fluid-max-scale-3) * var(--fluid-max-ratio);
  --fluid-max-scale-5: var(--fluid-max-scale-4) * var(--fluid-max-ratio);
  --fluid-max-scale-6: var(--fluid-max-scale-5) * var(--fluid-max-ratio);
  --fluid-max-scale-7: var(--fluid-max-scale-6) * var(--fluid-max-ratio);
  --fluid-max-scale-8: var(--fluid-max-scale-7) * var(--fluid-max-ratio);

  --fluid-min-size-0: (var(--fluid-min-size)) / 16;
  --fluid-min-size-1: (var(--fluid-min-size) * var(--fluid-min-scale-0)) / 16;
  --fluid-min-size-2: (var(--fluid-min-size) * var(--fluid-min-scale-1)) / 16;
  --fluid-min-size-3: (var(--fluid-min-size) * var(--fluid-min-scale-2)) / 16;
  --fluid-min-size-4: (var(--fluid-min-size) * var(--fluid-min-scale-3)) / 16;
  --fluid-min-size-5: (var(--fluid-min-size) * var(--fluid-min-scale-4)) / 16;
  --fluid-min-size-6: (var(--fluid-min-size) * var(--fluid-min-scale-5)) / 16;
  --fluid-min-size-7: (var(--fluid-min-size) * var(--fluid-min-scale-6)) / 16;
  --fluid-min-size-8: (var(--fluid-min-size) * var(--fluid-min-scale-7)) / 16;

  --fluid-max-size-0: (var(--fluid-max-size)) / 16;
  --fluid-max-size-1: (var(--fluid-max-size) * var(--fluid-max-scale-0)) / 16;
  --fluid-max-size-2: (var(--fluid-max-size) * var(--fluid-max-scale-1)) / 16;
  --fluid-max-size-3: (var(--fluid-max-size) * var(--fluid-max-scale-2)) / 16;
  --fluid-max-size-4: (var(--fluid-max-size) * var(--fluid-max-scale-3)) / 16;
  --fluid-max-size-5: (var(--fluid-max-size) * var(--fluid-max-scale-4)) / 16;
  --fluid-max-size-6: (var(--fluid-max-size) * var(--fluid-max-scale-5)) / 16;
  --fluid-max-size-7: (var(--fluid-max-size) * var(--fluid-max-scale-6)) / 16;
  --fluid-max-size-8: (var(--fluid-max-size) * var(--fluid-max-scale-7)) / 16;

  /**
   * The following ones are like the public custom properties and should be used in the code
   */
  --fluid--3: calc(var(--fluid-0) * 0.2);
  --fluid--3: calc(var(--fluid-0) * 0.4);
  --fluid--2: calc(var(--fluid-0) * 0.6);
  --fluid--1: calc(var(--fluid-0) * 0.8);
  --fluid-0: calc(((var(--fluid-min-size-0) * 1rem) + (var(--fluid-max-size-0) - var(--fluid-min-size-0)) * var(--fluid-bp)));
  --fluid-1: calc(((var(--fluid-min-size-1) * 1rem) + (var(--fluid-max-size-1) - var(--fluid-min-size-1)) * var(--fluid-bp)));
  --fluid-2: calc(((var(--fluid-min-size-2) * 1rem) + (var(--fluid-max-size-2) - var(--fluid-min-size-2)) * var(--fluid-bp)));
  --fluid-3: calc(((var(--fluid-min-size-3) * 1rem) + (var(--fluid-max-size-3) - var(--fluid-min-size-3)) * var(--fluid-bp)));
  --fluid-4: calc(((var(--fluid-min-size-4) * 1rem) + (var(--fluid-max-size-4) - var(--fluid-min-size-4)) * var(--fluid-bp)));
  --fluid-5: calc(((var(--fluid-min-size-5) * 1rem) + (var(--fluid-max-size-5) - var(--fluid-min-size-5)) * var(--fluid-bp)));
  --fluid-6: calc(((var(--fluid-min-size-6) * 1rem) + (var(--fluid-max-size-6) - var(--fluid-min-size-6)) * var(--fluid-bp)));
  --fluid-7: calc(((var(--fluid-min-size-7) * 1rem) + (var(--fluid-max-size-7) - var(--fluid-min-size-7)) * var(--fluid-bp)));
  --fluid-8: calc(((var(--fluid-min-size-8) * 1rem) + (var(--fluid-max-size-8) - var(--fluid-min-size-8)) * var(--fluid-bp)));

  /* Color palette */
  --primary-color: lch(1.9 2.4 210.02);
  --primary-text: lch(70 0 0);
  --secondary-text: lch(50 0 0);
}


@media screen and (min-width: 1500px) {
  :root {
    --fluid-screen: calc(var(--fluid-max-width) * 1px);
  }
}

*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: inherit;
  line-height: inherit;
  color: inherit;
}

*:focus {
  outline: 2px solid var(--primary-text);
  outline-offset: 2px;
  position: relative;
}

:where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  li,
  figcaption
) {
  max-inline-size: var(--measure);
  text-wrap: balance;
}

p {
  max-inline-size: var(--measure);
  text-wrap: pretty;
  max-width: 50ch;
}

:where(html, body) {
  background-color: var(--primary-color);
}

html {
  font-family: "Montserrat Variable", system-ui, sans-serif;
  height: 100%;
}

body {
  overflow-y: auto;
  overflow-x: hidden;
  min-height: 100%;
  color: var(--primary-text);
  background-color: var(--primary-color);
  font-size: var(--fluid-1);
}

video {
  width: 100%;
  height: 100%;
  border-radius: 16px;
  box-shadow: 0 0 7px 3px rgba(0, 0, 0, 0.5);
}

h1 {
  font-size: var(--fluid-4);
}

p {
  font-size: inherit;
}

a {
  font-size: inherit;
  color: inherit;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }

  &[aria-disabled] {
    /* pointer-events: none; */
    color: var(--secondary-text);
    &:hover {
      cursor: not-allowed;
    }
  }
}

h2 {
  font-size: var(--fluid-2);
  text-align: center;
}

summary {
  font-size: var(--fluid-1);
  font-weight: 500;
}

.visually-hidden {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0;
  border: 0;
  height: 1px;
  width: 1px;
  overflow: hidden;
}

.icon {
  stroke-width: 1px;
}

.text-gradient {
  background:
    linear-gradient(
      60deg,
      lch(63 89 280) 15%,
      lch(90 62 188) 25%,
      lch(30 101.4 233.8) 40%,
      lch(90 0 0) 75%
    ) text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  box-decoration-break: clone;
}

.text-gradient-2 {
  background: linear-gradient(264deg,hsl(207, 90%, 54%) 20%,hsl(262, 52%, 47%));
  background-clip: text;
  -webkit-text-fill-color: transparent;
  box-decoration-break: clone;
}

.special-border {
  background:
    linear-gradient(black, black) padding-box,
    linear-gradient(to right, lch(14 0 0), lch(24 0 0), lch(7 0 0)) border-box;
  border: 2px solid transparent;
}

/*
 * Scrollbar style
 */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: black;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: linear-gradient(
    231deg,
    hsl(210deg 20% 14.57%) 20%,
    hsl(210deg 20% 14.57%) 40%,
    hsl(210deg 20% 14.57%)
  );
  border-radius: 10px;
  &:hover {
    background: hsl(186.79deg 100% 27.57%);
  }
}
